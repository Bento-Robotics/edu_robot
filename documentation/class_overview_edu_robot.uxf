<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>210</y>
      <w>880</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>EthernetGatewayShield
--
- _communicator : std::shared_ptr&lt;EthernetCommunicator&gt;
- _clock : std::shared_ptr&lt;rclcpp::Clock&gt;
- _diagnostic : struct {
    std::shared_ptr&lt;diagnostic::MeanDiagnostic&lt;float, std::less&lt;float&gt;&gt;&gt; voltage;
    std::shared_ptr&lt;diagnostic::MeanDiagnostic&lt;float, std::greater&lt;float&gt;&gt;&gt; current;
    std::shared_ptr&lt;diagnostic::MeanDiagnostic&lt;float, std::greater&lt;float&gt;&gt;&gt; temperature;
    std::shared_ptr&lt;diagnostic::StandardDeviationDiagnostic&lt;std::uint64_t, std::greater&lt;std::uint64_t&gt;&gt;&gt; processing_dt;
    rclcpp::Time last_processing;
  };
--
+ EthernetGatewayShield(char const* const ip_address, const std::uint16_t port)
+ getCommunicator() : std::shared_ptr&lt;EthernetCommunicator&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>0</y>
      <w>680</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>ProcessingComponentOutput
--
-_name : std::string
-_inputs : std::vector&lt;std::shared_ptr&lt;ProcessingComponentInput&lt;Output&gt;&gt;&gt;
--
+ ProcessingComponentOutput(const std::string&amp; name)
+ name() const : const std::string&amp; 
+ registerComponentInput(std::shared_ptr&lt;ProcessingComponentInput&lt;Output&gt;&gt; input) : void
# sendInputValue(const Output&amp; value) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>500</y>
      <w>880</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>EthernetCommunicator
--

--
+ EthernetCommunicator(char const* const ip_address, const std::uint16_t port)
+ sendRequest(Request request) : std::future&lt;Request&gt;
+ registerRxDataEndpoint(RxDataEndPoint&amp;&amp; endpoint) : void
+ getRxBuffer() : tcp::message::RxMessageDataBuffer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>0</y>
      <w>340</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/RobotHardwareInterface/
--
#_report : RobotStatusReport
--
/+enable() : void = 0/
/+disable() : void = 0/
/+getStatusReport() : RobotStatusReport = 0/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>120</y>
      <w>390</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;370.0;50.0;370.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1660</x>
      <y>120</y>
      <w>250</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;230.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>440</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>220</y>
      <w>270</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>EthernetGatewayDevice
--
- _name : std::string
--
+ name() const : const std::string&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>370</y>
      <w>560</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>EthernetGatewayRxDevice
--

--
/+processRxData(const tcp::message::RxMessageDataBuffer&amp; data) = 0 : void/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>370</y>
      <w>560</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>EthernetGatewayTxDevice
--
# _tx_buffer : tcp::message::TxMessageDataBuffer
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>290</x>
      <y>520</y>
      <w>600</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>EthernetGatewayTxRxDevice
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>440</y>
      <w>420</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;400.0;50.0;400.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>440</y>
      <w>470</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>450.0;10.0;450.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>290</y>
      <w>420</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>400.0;10.0;400.0;50.0;10.0;50.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>290</y>
      <w>470</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;450.0;50.0;450.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>830</y>
      <w>270</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>ImuSensorHardware
--
--
- processMeasurement() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>520</y>
      <w>270</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;diagnostic::DiagnosticComponent&gt;&gt;
/Sensor/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>660</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>ImuSensor
{innerclass
&lt;&lt;HardwareSensorInterface&gt;&gt;
SensorInterface
innerclass}
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>760</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>590</y>
      <w>490</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>470.0;10.0;470.0;210.0;10.0;210.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>560</y>
      <w>990</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;320.0;890.0;320.0;890.0;10.0;970.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>590</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
